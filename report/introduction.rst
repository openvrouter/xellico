
はじめに
========

ソフトウェアルータ等のVNFを実装する場合, DPDK [DPDKorg]_ を用いることで,
OSのソケット等を用いる場合と比べ, 高性能に実装することができ,
数百Mppsを達成可能である.
しかし, DPDKの性能を十分に発揮するためにはコンピュータ理論に精通し,
適切に計算機を利用する必要があり, 難解である. いちいちルータを開発するのに合わせて,
暗がりを探りながら, 高速そうな手法を採用して実装していくのはよくないため
「DPDKをちゃんと理解したい」というのが, 我々の考えるところである.
ここで言う「ちゃんと」というのは, DPDKによりどれくらいの性能がでるのか.
であり, もっというと, DPDKはどれくらいが限界なのか. ということである.

本研究では, 10GbEでの最適なDPDKチューニング方法を明らかにするため,
PCIe NICの性能特性を測る方法を提案し, それを用いて, いくつかの環境での,
DPDKアプリケーションの開発助けるデータをとる方法を検討した.
より具体的に説明すると, 本研究では, TSCを用いてDPDKの細かい関数遅延を測る
ことにより, VNFの性能を内部の関数遅延から計算した. またそれを外部性能計測器により
計測した値と比較することにより, ソフトウェアサイドからは見ることができず,
ハードウェアトランザクション等に隠れた特徴を調査した.

本研究の計測方法を用いることにより, VNF開発の性能目標のための作業手順がより単純化
されることが期待できる.
本研究を参照し, ソフトウェアルータやソフトウェアFirewall等のVNFの開発コストの
低下と形式化をすることが私の願いである.

本研究は, 実験方法検討, 実験, 結果からの考察, の流れで進めた.
:ref:`method` では,本研究を進める手順, 評価手法について説明する.
:ref:`experiment` では必要な実験の詳細な方法について説明する.
:ref:`result` では実験の結果を示す.
:ref:`disscussion` では結果から得られる考察を論じる.
:ref:`conclusion` では結論を示す.
性能の評価は帯域のみを研究対象とした.
計測はpktgen-dpdk [PKTGENdpdk]_ を用いて行なった.
pktgen-dpdkにも遅延計測機能があるが, 正確な情報が取れる確証がなかったため,
遅延計測は本研究では対象外とした.


tl;tr

- 目的: DPDKを理解したい
- 目標: HW特性をまとめる, VNF開発時に内部の必要性能を計算可能にする
- 方法: DPDKの細かいマイクロレイテンシを測る, 内部/外部の性能差の理由を考える


